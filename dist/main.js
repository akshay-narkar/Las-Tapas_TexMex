(()=>{"use strict";var e={467:(e,t,n)=>{e.exports=n.p+"94d8a3c7318a868c3dfe.jpeg"},69:(e,t,n)=>{e.exports=n.p+"10944a76d970237fc7ee.jpg"},465:(e,t,n)=>{e.exports=n.p+"d0bab6c2167588369e32.jpeg"},426:(e,t,n)=>{n.d(t,{Z:()=>b});var r=n(15),o=n.n(r),a=n(645),c=n.n(a),i=n(667),s=n.n(i),d=n(467),u=n(69),l=c()(o()),p=s()(d),m=s()(u);l.push([e.id,"ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\n.image {\n  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(37, 0, 0, 0.4)), url("+p+");\n  height: 100vh;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n}\n\n.image1 {\n  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(37, 0, 0, 0.4)), url("+m+");\n  height: 100vh;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n}\n\nbody {\n  background-color: black;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,qBAAqB;EACrB,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,mHAAsG;EACtG,aAAa;EACb,4BAA4B;EAC5B,sBAAsB;EACtB,kCAAkC;AACpC;;AAEA;EACE,mHAA4I;EAC5I,aAAa;EACb,4BAA4B;EAC5B,sBAAsB;EACtB,kCAAkC;AACpC;;AAEA;EACE,uBAAuB;AACzB",sourcesContent:["ul {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n}\n\n.image {\n  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(37, 0, 0, 0.4)), url(../assets/03kVP4.jpeg);\n  height: 100vh;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n}\n\n.image1 {\n  background-image: linear-gradient(rgba(0, 0, 0, 0.4), rgba(37, 0, 0, 0.4)), url(../assets/Mexican\\ Food\\ HD\\ Wallpaper\\ Food\\ Pinterest.jpg);\n  height: 100vh;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center center;\n}\n\nbody {\n  background-color: black;\n}\n"],sourceRoot:""}]);const b=l},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(o[c]=!0)}for(var i=0;i<e.length;i++){var s=[].concat(e[i]);r&&o[s[0]]||(n&&(s[2]?s[2]="".concat(n," and ").concat(s[2]):s[2]=n),t.push(s))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,o=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var c,i=e[Symbol.iterator]();!(r=(c=i.next()).done)&&(n.push(c.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==i.return||i.return()}finally{if(o)throw a}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],c=o[3];if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(c)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),d="/*# ".concat(s," */"),u=c.sources.map((function(e){return"/*# sourceURL=".concat(c.sourceRoot||"").concat(e," */")}));return[a].concat(u).concat([d]).join("\n")}return[a].join("\n")}},667:e=>{e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},379:(e,t,n)=>{var r,o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function c(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function i(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],s=t.base?i[0]+t.base:i[0],d=n[s]||0,u="".concat(s," ").concat(d);n[s]=d+1;var l=c(u),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==l?(a[l].references++,a[l].updater(p)):a.push({identifier:u,updater:f(p,t),references:1}),r.push(u)}return r}function s(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var c=o(e.insert||"head");if(!c)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");c.appendChild(t)}return t}var d,u=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function l(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(t,o);else{var a=document.createTextNode(o),c=e.childNodes;c[t]&&e.removeChild(c[t]),c.length?e.insertBefore(a,c[t]):e.appendChild(a)}}function p(e,t,n){var r=n.css,o=n.media,a=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,b=0;function f(e,t){var n,r,o;if(t.singleton){var a=b++;n=m||(m=s(t)),r=l.bind(null,n,a,!1),o=l.bind(null,n,a,!0)}else n=s(t),r=p.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=i(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=c(n[r]);a[o].references--}for(var s=i(e,t),d=0;d<n.length;d++){var u=c(n[d]);0===a[u].references&&(a[u].updater(),a.splice(u,1))}n=s}}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{const e=function(){const e=document.getElementById("content");e.innerHTML="";const t=document.createElement("div");e.appendChild(t);const n=document.createElement("div");n.setAttribute("class","image"),e.appendChild(n);const r=document.createElement("div");n.appendChild(r),r.setAttribute("class","pt-5 px-3");const o=document.createElement("h1");r.appendChild(o),o.setAttribute("class","text-center font-weight-bold text-white header1 mt-5"),o.innerHTML="Your Favorite Mexican Food Now In Mumbai!"};n(465);const t=function(){const e=document.getElementById("content");e.innerHTML="";const t=document.createElement("div");e.appendChild(t);const n=document.createElement("div");n.setAttribute("class","image"),e.appendChild(n);const r=document.createElement("div");n.appendChild(r),r.setAttribute("class","p-3");const o=document.createElement("img");r.appendChild(o),o.setAttribute("class","container d-flex"),o.setAttribute("src","../assets/menu.jpeg")},r=function(){const e=document.getElementById("content");e.innerHTML="";const t=document.createElement("div");e.appendChild(t);const n=document.createElement("div");n.setAttribute("class","image1"),e.appendChild(n);const r=document.createElement("div");n.appendChild(r),r.setAttribute("class","pt-5 px-3");const o=document.createElement("h1");r.appendChild(o),o.setAttribute("class","text-center font-weight-bold text-white header1 mt-5"),o.innerHTML="Contact Us!";const a=document.createElement("h3");r.appendChild(a),a.innerHTML="Las Tapas, Shop 4, Jharna Kutir CHS, Subhash Road, Vile Parle East, Mumbai",a.setAttribute("class","text-center font-weight-bold text-white mt-5");const c=document.createElement("h4");c.innerHTML="+91 9123456780",c.setAttribute("class","text-center font-weight-bold text-white"),r.appendChild(c)};var o=n(379),a=n.n(o),c=n(426);a()(c.Z,{insert:"head",singleton:!1}),c.Z.locals,function(){const n=document.getElementsByTagName("body")[0],o=document.createElement("div"),a=document.getElementById("content");o.setAttribute("class","text-center bg-warning my-0");const c=document.createElement("h1");c.setAttribute("class","text-dark my-0 font-weight-bold"),c.textContent="Las Tapas - Tex Mex",o.appendChild(c),n.insertBefore(o,a);const i=document.createElement("div");n.insertBefore(i,a),i.setAttribute("class","container-fluid px-0");const s=i.appendChild(document.createElement("div"));s.setAttribute("class","btn-group d-flex");const d=document.createElement("a");d.textContent="Home",d.setAttribute("class","btn btn-dark btn-block mt-0 border font-weight-bold"),d.setAttribute("id","home"),s.appendChild(d);const u=document.createElement("a");u.textContent="Menu",u.setAttribute("class","btn btn-dark btn-block mt-0 border font-weight-bold"),u.setAttribute("id","menu"),s.appendChild(u);const l=document.createElement("a");l.textContent="Contact",l.setAttribute("class","btn btn-dark btn-block mt-0 border font-weight-bold"),l.setAttribute("id","contact"),s.appendChild(l);const p=document.getElementById("home"),m=document.getElementById("menu"),b=document.getElementById("contact");p.addEventListener("click",e),m.addEventListener("click",t),b.addEventListener("click",r)}(),e()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,